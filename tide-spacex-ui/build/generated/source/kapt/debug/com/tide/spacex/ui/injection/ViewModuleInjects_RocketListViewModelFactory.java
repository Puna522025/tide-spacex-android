// Generated by Dagger (https://dagger.dev).
package com.tide.spacex.ui.injection;

import android.content.SharedPreferences;
import androidx.lifecycle.ViewModel;
import com.tide.spacex.network.repository.RocketsListRepository;
import com.tide.spacex.network.usecase.RocketListUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ViewModuleInjects_RocketListViewModelFactory implements Factory<ViewModel> {
  private final Provider<RocketListUseCase> rocketListUseCaseProvider;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  private final Provider<RocketsListRepository> repositoryProvider;

  public ViewModuleInjects_RocketListViewModelFactory(
      Provider<RocketListUseCase> rocketListUseCaseProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<RocketsListRepository> repositoryProvider) {
    this.rocketListUseCaseProvider = rocketListUseCaseProvider;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public ViewModel get() {
    return rocketListViewModel(rocketListUseCaseProvider.get(), sharedPreferencesProvider.get(), repositoryProvider.get());
  }

  public static ViewModuleInjects_RocketListViewModelFactory create(
      Provider<RocketListUseCase> rocketListUseCaseProvider,
      Provider<SharedPreferences> sharedPreferencesProvider,
      Provider<RocketsListRepository> repositoryProvider) {
    return new ViewModuleInjects_RocketListViewModelFactory(rocketListUseCaseProvider, sharedPreferencesProvider, repositoryProvider);
  }

  public static ViewModel rocketListViewModel(RocketListUseCase rocketListUseCase,
      SharedPreferences sharedPreferences, RocketsListRepository repository) {
    return Preconditions.checkNotNullFromProvides(ViewModuleInjects.INSTANCE.rocketListViewModel(rocketListUseCase, sharedPreferences, repository));
  }
}
